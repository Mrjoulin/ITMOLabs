package test.java;// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class RegistrationTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void registration() {
    // Test name: Registration
    // Step # | name | target | value | comment
    // 1 | open | /ru |  | 
    driver.get("https://www.mamba.ru/ru");
    // 2 | setWindowSize | 1191x875 |  | 
    driver.manage().window().setSize(new Dimension(1191, 875));
    // 3 | if | window.location.pathname != '/ru' |  | 
    if ((Boolean) js.executeScript("return (window.location.pathname != \'/ru\')")) {
      // 4 | click | css=svg |  | 
      driver.findElement(By.cssSelector("svg")).click();
      // 5 | click | xpath=//button[contains(@data-name, 'logout-action')] |  | 
      driver.findElement(By.xpath("//button[contains(@data-name, \'logout-action\')]")).click();
      // 6 | end |  |  | 
    }
    // 7 | pause | 1000 |  | 
    try {
      Thread.sleep(1000);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    // 8 | click | xpath=//button[contains(.,'Мужчина')] |  | 
    driver.findElement(By.xpath("//button[contains(.,\'Мужчина\')]")).click();
    // 9 | click | xpath=//button[contains(.,'Серьёзные отношения')] |  | 
    driver.findElement(By.xpath("//button[contains(.,\'Серьёзные отношения\')]")).click();
    // 10 | click | xpath=//div[@id='VideoBackgroundModalLayout']/div[2]/main/div/div/main/div[4]/div/button[contains(.,'Любого')] |  | 
    driver.findElement(By.xpath("//div[@id=\'VideoBackgroundModalLayout\']/div[2]/main/div/div/main/div[4]/div/button[contains(.,\'Любого\')]")).click();
    // 11 | click | xpath=//div[@id='VideoBackgroundModalLayout']/div[2]/main/div/div/main/div[5]/div/button[contains(.,'Любого')] |  | 
    driver.findElement(By.xpath("//div[@id=\'VideoBackgroundModalLayout\']/div[2]/main/div/div/main/div[5]/div/button[contains(.,\'Любого\')]")).click();
    // 12 | type | name=name | Алексей | 
    driver.findElement(By.name("name")).sendKeys("Алексей");
    // 13 | click | xpath=//input[@value='Далее'] |  | 
    driver.findElement(By.xpath("//input[@value=\'Далее\']")).click();
    // 14 | click | name=day |  | 
    driver.findElement(By.name("day")).click();
    // 15 | select | name=day | label=1 | 
    {
      WebElement dropdown = driver.findElement(By.name("day"));
      dropdown.findElement(By.xpath("//option[. = '1']")).click();
    }
    // 16 | click | name=month |  | 
    driver.findElement(By.name("month")).click();
    // 17 | select | name=month | label=январь | 
    {
      WebElement dropdown = driver.findElement(By.name("month"));
      dropdown.findElement(By.xpath("//option[. = 'январь']")).click();
    }
    // 18 | click | name=year |  | 
    driver.findElement(By.name("year")).click();
    // 19 | select | name=year | label=1982 | 
    {
      WebElement dropdown = driver.findElement(By.name("year"));
      dropdown.findElement(By.xpath("//option[. = '1982']")).click();
    }
    // 20 | click | xpath=//input[@value='Далее'] |  | 
    driver.findElement(By.xpath("//input[@value=\'Далее\']")).click();
    // 21 | click | xpath=//input[@name='email'] |  | 
    driver.findElement(By.xpath("//input[@name=\'email\']")).click();
    // 22 | executeScript | var email = "mytestmail" + Math.floor(Math.random()*11111)  + "@gmail.com"; return email; | email | 
    vars.put("email", js.executeScript("var email = \"mytestmail\" + Math.floor(Math.random()*11111)  + \"@gmail.com\"; return email;"));
    // 23 | type | xpath=//input[@name='email'] | ${email} | 
    driver.findElement(By.xpath("//input[@name=\'email\']")).sendKeys(vars.get("email").toString());
    // 24 | click | xpath=//button[@type='submit'] |  | 
    driver.findElement(By.xpath("//button[@type=\'submit\']")).click();
    // 25 | click | xpath=//div[@id='app']/div[2]/div/div/div/main/a/div/div |  | 
    driver.findElement(By.xpath("//div[@id=\'app\']/div[2]/div/div/div/main/a/div/div")).click();
    // 26 | click | css=svg:nth-child(1) > path:nth-child(1) |  | 
    driver.findElement(By.cssSelector("svg:nth-child(1) > path:nth-child(1)")).click();
    // 27 | click | xpath=//input[@name='phoneNumber'] |  | 
    driver.findElement(By.xpath("//input[@name=\'phoneNumber\']")).click();
    // 28 | executeScript | var phone = 1000000000 + Math.floor(Math.random()*8999999999); return phone; | phone | 
    vars.put("phone", js.executeScript("var phone = 1000000000 + Math.floor(Math.random()*8999999999); return phone;"));
    // 29 | type | xpath=//input[@name='phoneNumber'] | ${phone} | 
    driver.findElement(By.xpath("//input[@name=\'phoneNumber\']")).sendKeys(vars.get("phone").toString());
    // 30 | click | xpath=//input[@value='Получить код подтверждения'] |  | 
    driver.findElement(By.xpath("//input[@value=\'Получить код подтверждения\']")).click();
  }
}
